class Solution {
    public int[] finalPrices(int[] prices) {
        int n = prices.length;
        Stack<Integer> stack = new Stack<>();
          int[] res = new int[n];

          for (int i = n - 1; i >= 0; --i) {
             while (!stack.isEmpty() && prices[stack.peek()] > prices[i]) {
                stack.pop();
            }

             if (stack.isEmpty()) {
                res[i] = prices[i];
            } else {
                // Apply discount using the next smaller element
                res[i] = prices[i] - prices[stack.peek()];
            }
            stack.push(i);
          }

          return res;
    }
}
